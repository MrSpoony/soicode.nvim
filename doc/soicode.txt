==============================================================================
------------------------------------------------------------------------------
                                                             *Soicode.compile()*
                              `Soicode.compile`()
Compile the c++ file you are currently in, or the corresponding file from the stoml file you currently have open.

Usage ~
`require("soicode").compile()`

------------------------------------------------------------------------------
                                                         *Soicode.get_samples()*
                            `Soicode.get_samples`()
Get the samples from the current file, or the corresponding stoml file.

Return ~
`(Sample[]|nil)` samples The samples from the current file or nil in case of an error.

Usage ~
`require("soicode").get_samples()`


==============================================================================
------------------------------------------------------------------------------
                                                               *Soicode.options*
                               `Soicode.options`
Your plugin configuration with its default values.

Default values:
>
  Soicode.options = {
      -- Prints useful logs about what event are triggered, and reasons actions are executed.
      debug = false,
      -- Compiler to use
      compiler = "g++",
      -- Additional flags
      flags = "-Wall -Wextra -fdiagnostics-color=never -std=c++20 -O2",
      -- Use the soi header
      soi_header = true,
  }

<

------------------------------------------------------------------------------
                                                               *Soicode.setup()*
                           `Soicode.setup`({options})
Define your soicode setup.

Parameters ~
{options} `(table)` Module config table. See |Soicode.options|.

Usage ~
`require("soicode").setup()` (add `{}` with your |Soicode.options| table)


==============================================================================
------------------------------------------------------------------------------
Class ~
{Sample}
Fields ~
{name} `(string)`
{input} `(string)`
{output} `(string)`


 vim:tw=78:ts=8:noet:ft=help:norl: